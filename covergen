#!/usr/local/bin/python3
from termcolor import cprint

import os
import sys
import json
#import helpers for displaying data
import display
#import helpers for adding data
import add
#import helpers for compiling cover letters
import parser

RED = 'red'
BLUE = 'blue'

if len(sys.argv) > 1 and sys.argv[1] == "display":
    try:
        data_file = open("data.json")
        data = json.load(data_file)
        data_file.close()
        cprint("Red represents a value",RED)
        cprint("Blue represents a library",BLUE)
        display.print_dictionary(data)
    except FileNotFoundError:
        print("No data.json present")

elif len(sys.argv) > 1 and sys.argv[1] == "add":
    if not os.path.isfile("data.json"):
        json.dump({}, open("data.json","w"))

    try:
        with open("data.json") as data_file:
            data = json.load(data_file)
            name = sys.argv[2]
            sentence = sys.argv[3]

            add.insert_into_dictionary(name,sentence,data,create_dictionary = True)

            with open("data.json","w") as file_to_write:
                json.dump(data,file_to_write)
    except IndexError:
        print("Provide a name followed by a sentence")
elif len(sys.argv) > 1 and sys.argv[1] == "compile":
    try:
        if filename.endswith('.coverletter'):
            filename = sys.argv[2]

            data_file = open("data.json")
            data = json.load(data_file)

            cover_letter = open(filename)
        else:
            print('File provided must end in .template')
    except FileNotFoundError:
        print("No data.json present or filename provided is incorrect")
    except IndexError:
        print("Please provide a filename")

    print("Compiling data")
